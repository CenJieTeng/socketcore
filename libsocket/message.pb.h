// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_INCLUDED_message_2eproto
#define PROTOBUF_INCLUDED_message_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_message_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_message_2eproto();
class GameMsg;
class GameMsgDefaultTypeInternal;
extern GameMsgDefaultTypeInternal _GameMsg_default_instance_;
class RoomMsg;
class RoomMsgDefaultTypeInternal;
extern RoomMsgDefaultTypeInternal _RoomMsg_default_instance_;
class SessionMsg;
class SessionMsgDefaultTypeInternal;
extern SessionMsgDefaultTypeInternal _SessionMsg_default_instance_;
namespace google {
namespace protobuf {
template<> ::GameMsg* Arena::CreateMaybeMessage<::GameMsg>(Arena*);
template<> ::RoomMsg* Arena::CreateMaybeMessage<::RoomMsg>(Arena*);
template<> ::SessionMsg* Arena::CreateMaybeMessage<::SessionMsg>(Arena*);
}  // namespace protobuf
}  // namespace google

enum SessionMsgType {
  S_NONE = 0,
  S_CLOSE = 1,
  S_GETKEY = 2,
  S_GETSEED = 3,
  S_CHAT = 4,
  S_REGISTER = 5,
  S_LOGIN = 6,
  S_LOGOUT = 7,
  SessionMsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = (std::numeric_limits<::google::protobuf::int32>::min)(),
  SessionMsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = (std::numeric_limits<::google::protobuf::int32>::max)()
};
bool SessionMsgType_IsValid(int value);
const SessionMsgType SessionMsgType_MIN = S_NONE;
const SessionMsgType SessionMsgType_MAX = S_LOGOUT;
const int SessionMsgType_ARRAYSIZE = SessionMsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SessionMsgType_descriptor();
inline const ::std::string& SessionMsgType_Name(SessionMsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SessionMsgType_descriptor(), value);
}
inline bool SessionMsgType_Parse(
    const ::std::string& name, SessionMsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SessionMsgType>(
    SessionMsgType_descriptor(), name, value);
}
enum GameMsgType {
  G_NONE = 0,
  G_CREATE = 1,
  G_POSITION = 2,
  G_ATTACK = 3,
  G_ENEMY_HURT = 4,
  G_CHAT = 5,
  G_GET_DAMAGE = 6,
  GameMsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = (std::numeric_limits<::google::protobuf::int32>::min)(),
  GameMsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = (std::numeric_limits<::google::protobuf::int32>::max)()
};
bool GameMsgType_IsValid(int value);
const GameMsgType GameMsgType_MIN = G_NONE;
const GameMsgType GameMsgType_MAX = G_GET_DAMAGE;
const int GameMsgType_ARRAYSIZE = GameMsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GameMsgType_descriptor();
inline const ::std::string& GameMsgType_Name(GameMsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GameMsgType_descriptor(), value);
}
inline bool GameMsgType_Parse(
    const ::std::string& name, GameMsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GameMsgType>(
    GameMsgType_descriptor(), name, value);
}
enum RoomMsgType {
  R_NONE = 0,
  R_CREATE = 1,
  R_INTO = 2,
  R_LEAVE = 3,
  R_START = 4,
  R_READY = 5,
  R_ROOMLIST = 6,
  RoomMsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = (std::numeric_limits<::google::protobuf::int32>::min)(),
  RoomMsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = (std::numeric_limits<::google::protobuf::int32>::max)()
};
bool RoomMsgType_IsValid(int value);
const RoomMsgType RoomMsgType_MIN = R_NONE;
const RoomMsgType RoomMsgType_MAX = R_ROOMLIST;
const int RoomMsgType_ARRAYSIZE = RoomMsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoomMsgType_descriptor();
inline const ::std::string& RoomMsgType_Name(RoomMsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoomMsgType_descriptor(), value);
}
inline bool RoomMsgType_Parse(
    const ::std::string& name, RoomMsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoomMsgType>(
    RoomMsgType_descriptor(), name, value);
}
// ===================================================================

class SessionMsg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SessionMsg) */ {
 public:
  SessionMsg();
  virtual ~SessionMsg();

  SessionMsg(const SessionMsg& from);

  inline SessionMsg& operator=(const SessionMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SessionMsg(SessionMsg&& from) noexcept
    : SessionMsg() {
    *this = ::std::move(from);
  }

  inline SessionMsg& operator=(SessionMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SessionMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SessionMsg* internal_default_instance() {
    return reinterpret_cast<const SessionMsg*>(
               &_SessionMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SessionMsg* other);
  friend void swap(SessionMsg& a, SessionMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SessionMsg* New() const final {
    return CreateMaybeMessage<SessionMsg>(nullptr);
  }

  SessionMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SessionMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SessionMsg& from);
  void MergeFrom(const SessionMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SessionMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string chatMsg = 5;
  void clear_chatmsg();
  static const int kChatMsgFieldNumber = 5;
  const ::std::string& chatmsg() const;
  void set_chatmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_chatmsg(::std::string&& value);
  #endif
  void set_chatmsg(const char* value);
  void set_chatmsg(const char* value, size_t size);
  ::std::string* mutable_chatmsg();
  ::std::string* release_chatmsg();
  void set_allocated_chatmsg(::std::string* chatmsg);

  // string name = 6;
  void clear_name();
  static const int kNameFieldNumber = 6;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string account = 7;
  void clear_account();
  static const int kAccountFieldNumber = 7;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string password = 8;
  void clear_password();
  static const int kPasswordFieldNumber = 8;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // .SessionMsgType MsgType = 1;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  ::SessionMsgType msgtype() const;
  void set_msgtype(::SessionMsgType value);

  // bool result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  bool result() const;
  void set_result(bool value);

  // int32 key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // int32 seed = 4;
  void clear_seed();
  static const int kSeedFieldNumber = 4;
  ::google::protobuf::int32 seed() const;
  void set_seed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SessionMsg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chatmsg_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  int msgtype_;
  bool result_;
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 seed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class GameMsg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMsg) */ {
 public:
  GameMsg();
  virtual ~GameMsg();

  GameMsg(const GameMsg& from);

  inline GameMsg& operator=(const GameMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameMsg(GameMsg&& from) noexcept
    : GameMsg() {
    *this = ::std::move(from);
  }

  inline GameMsg& operator=(GameMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GameMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameMsg* internal_default_instance() {
    return reinterpret_cast<const GameMsg*>(
               &_GameMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GameMsg* other);
  friend void swap(GameMsg& a, GameMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameMsg* New() const final {
    return CreateMaybeMessage<GameMsg>(nullptr);
  }

  GameMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameMsg& from);
  void MergeFrom(const GameMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 keys = 9;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 9;
  ::google::protobuf::int32 keys(int index) const;
  void set_keys(int index, ::google::protobuf::int32 value);
  void add_keys(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      keys() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_keys();

  // repeated float damage = 10;
  int damage_size() const;
  void clear_damage();
  static const int kDamageFieldNumber = 10;
  float damage(int index) const;
  void set_damage(int index, float value);
  void add_damage(float value);
  const ::google::protobuf::RepeatedField< float >&
      damage() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_damage();

  // string chatMsg = 8;
  void clear_chatmsg();
  static const int kChatMsgFieldNumber = 8;
  const ::std::string& chatmsg() const;
  void set_chatmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_chatmsg(::std::string&& value);
  #endif
  void set_chatmsg(const char* value);
  void set_chatmsg(const char* value, size_t size);
  ::std::string* mutable_chatmsg();
  ::std::string* release_chatmsg();
  void set_allocated_chatmsg(::std::string* chatmsg);

  // .GameMsgType MsgType = 1;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  ::GameMsgType msgtype() const;
  void set_msgtype(::GameMsgType value);

  // float x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // float y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // int32 key = 4;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // float angle = 5;
  void clear_angle();
  static const int kAngleFieldNumber = 5;
  float angle() const;
  void set_angle(float value);

  // float atk = 6;
  void clear_atk();
  static const int kAtkFieldNumber = 6;
  float atk() const;
  void set_atk(float value);

  // int32 enemyTag = 7;
  void clear_enemytag();
  static const int kEnemyTagFieldNumber = 7;
  ::google::protobuf::int32 enemytag() const;
  void set_enemytag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMsg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > keys_;
  mutable std::atomic<int> _keys_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > damage_;
  mutable std::atomic<int> _damage_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr chatmsg_;
  int msgtype_;
  float x_;
  float y_;
  ::google::protobuf::int32 key_;
  float angle_;
  float atk_;
  ::google::protobuf::int32 enemytag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class RoomMsg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoomMsg) */ {
 public:
  RoomMsg();
  virtual ~RoomMsg();

  RoomMsg(const RoomMsg& from);

  inline RoomMsg& operator=(const RoomMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoomMsg(RoomMsg&& from) noexcept
    : RoomMsg() {
    *this = ::std::move(from);
  }

  inline RoomMsg& operator=(RoomMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RoomMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoomMsg* internal_default_instance() {
    return reinterpret_cast<const RoomMsg*>(
               &_RoomMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RoomMsg* other);
  friend void swap(RoomMsg& a, RoomMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoomMsg* New() const final {
    return CreateMaybeMessage<RoomMsg>(nullptr);
  }

  RoomMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RoomMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RoomMsg& from);
  void MergeFrom(const RoomMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoomMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 roomList = 4;
  int roomlist_size() const;
  void clear_roomlist();
  static const int kRoomListFieldNumber = 4;
  ::google::protobuf::int32 roomlist(int index) const;
  void set_roomlist(int index, ::google::protobuf::int32 value);
  void add_roomlist(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roomlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roomlist();

  // repeated bool roomStatuses = 5;
  int roomstatuses_size() const;
  void clear_roomstatuses();
  static const int kRoomStatusesFieldNumber = 5;
  bool roomstatuses(int index) const;
  void set_roomstatuses(int index, bool value);
  void add_roomstatuses(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      roomstatuses() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_roomstatuses();

  // repeated int32 roomNumOfPeople = 6;
  int roomnumofpeople_size() const;
  void clear_roomnumofpeople();
  static const int kRoomNumOfPeopleFieldNumber = 6;
  ::google::protobuf::int32 roomnumofpeople(int index) const;
  void set_roomnumofpeople(int index, ::google::protobuf::int32 value);
  void add_roomnumofpeople(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roomnumofpeople() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roomnumofpeople();

  // .RoomMsgType MsgType = 1;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  ::RoomMsgType msgtype() const;
  void set_msgtype(::RoomMsgType value);

  // int32 roomId = 2;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // bool result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:RoomMsg)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roomlist_;
  mutable std::atomic<int> _roomlist_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > roomstatuses_;
  mutable std::atomic<int> _roomstatuses_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roomnumofpeople_;
  mutable std::atomic<int> _roomnumofpeople_cached_byte_size_;
  int msgtype_;
  ::google::protobuf::int32 roomid_;
  bool result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SessionMsg

// .SessionMsgType MsgType = 1;
inline void SessionMsg::clear_msgtype() {
  msgtype_ = 0;
}
inline ::SessionMsgType SessionMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:SessionMsg.MsgType)
  return static_cast< ::SessionMsgType >(msgtype_);
}
inline void SessionMsg::set_msgtype(::SessionMsgType value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:SessionMsg.MsgType)
}

// bool result = 2;
inline void SessionMsg::clear_result() {
  result_ = false;
}
inline bool SessionMsg::result() const {
  // @@protoc_insertion_point(field_get:SessionMsg.result)
  return result_;
}
inline void SessionMsg::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:SessionMsg.result)
}

// int32 key = 3;
inline void SessionMsg::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 SessionMsg::key() const {
  // @@protoc_insertion_point(field_get:SessionMsg.key)
  return key_;
}
inline void SessionMsg::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:SessionMsg.key)
}

// int32 seed = 4;
inline void SessionMsg::clear_seed() {
  seed_ = 0;
}
inline ::google::protobuf::int32 SessionMsg::seed() const {
  // @@protoc_insertion_point(field_get:SessionMsg.seed)
  return seed_;
}
inline void SessionMsg::set_seed(::google::protobuf::int32 value) {
  
  seed_ = value;
  // @@protoc_insertion_point(field_set:SessionMsg.seed)
}

// string chatMsg = 5;
inline void SessionMsg::clear_chatmsg() {
  chatmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SessionMsg::chatmsg() const {
  // @@protoc_insertion_point(field_get:SessionMsg.chatMsg)
  return chatmsg_.GetNoArena();
}
inline void SessionMsg::set_chatmsg(const ::std::string& value) {
  
  chatmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SessionMsg.chatMsg)
}
#if LANG_CXX11
inline void SessionMsg::set_chatmsg(::std::string&& value) {
  
  chatmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SessionMsg.chatMsg)
}
#endif
inline void SessionMsg::set_chatmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  chatmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SessionMsg.chatMsg)
}
inline void SessionMsg::set_chatmsg(const char* value, size_t size) {
  
  chatmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SessionMsg.chatMsg)
}
inline ::std::string* SessionMsg::mutable_chatmsg() {
  
  // @@protoc_insertion_point(field_mutable:SessionMsg.chatMsg)
  return chatmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionMsg::release_chatmsg() {
  // @@protoc_insertion_point(field_release:SessionMsg.chatMsg)
  
  return chatmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionMsg::set_allocated_chatmsg(::std::string* chatmsg) {
  if (chatmsg != nullptr) {
    
  } else {
    
  }
  chatmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatmsg);
  // @@protoc_insertion_point(field_set_allocated:SessionMsg.chatMsg)
}

// string name = 6;
inline void SessionMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SessionMsg::name() const {
  // @@protoc_insertion_point(field_get:SessionMsg.name)
  return name_.GetNoArena();
}
inline void SessionMsg::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SessionMsg.name)
}
#if LANG_CXX11
inline void SessionMsg::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SessionMsg.name)
}
#endif
inline void SessionMsg::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SessionMsg.name)
}
inline void SessionMsg::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SessionMsg.name)
}
inline ::std::string* SessionMsg::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:SessionMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionMsg::release_name() {
  // @@protoc_insertion_point(field_release:SessionMsg.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionMsg::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:SessionMsg.name)
}

// string account = 7;
inline void SessionMsg::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SessionMsg::account() const {
  // @@protoc_insertion_point(field_get:SessionMsg.account)
  return account_.GetNoArena();
}
inline void SessionMsg::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SessionMsg.account)
}
#if LANG_CXX11
inline void SessionMsg::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SessionMsg.account)
}
#endif
inline void SessionMsg::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SessionMsg.account)
}
inline void SessionMsg::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SessionMsg.account)
}
inline ::std::string* SessionMsg::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:SessionMsg.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionMsg::release_account() {
  // @@protoc_insertion_point(field_release:SessionMsg.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionMsg::set_allocated_account(::std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:SessionMsg.account)
}

// string password = 8;
inline void SessionMsg::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SessionMsg::password() const {
  // @@protoc_insertion_point(field_get:SessionMsg.password)
  return password_.GetNoArena();
}
inline void SessionMsg::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SessionMsg.password)
}
#if LANG_CXX11
inline void SessionMsg::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SessionMsg.password)
}
#endif
inline void SessionMsg::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SessionMsg.password)
}
inline void SessionMsg::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SessionMsg.password)
}
inline ::std::string* SessionMsg::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:SessionMsg.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionMsg::release_password() {
  // @@protoc_insertion_point(field_release:SessionMsg.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionMsg::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:SessionMsg.password)
}

// -------------------------------------------------------------------

// GameMsg

// .GameMsgType MsgType = 1;
inline void GameMsg::clear_msgtype() {
  msgtype_ = 0;
}
inline ::GameMsgType GameMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:GameMsg.MsgType)
  return static_cast< ::GameMsgType >(msgtype_);
}
inline void GameMsg::set_msgtype(::GameMsgType value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.MsgType)
}

// float x = 2;
inline void GameMsg::clear_x() {
  x_ = 0;
}
inline float GameMsg::x() const {
  // @@protoc_insertion_point(field_get:GameMsg.x)
  return x_;
}
inline void GameMsg::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.x)
}

// float y = 3;
inline void GameMsg::clear_y() {
  y_ = 0;
}
inline float GameMsg::y() const {
  // @@protoc_insertion_point(field_get:GameMsg.y)
  return y_;
}
inline void GameMsg::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.y)
}

// int32 key = 4;
inline void GameMsg::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 GameMsg::key() const {
  // @@protoc_insertion_point(field_get:GameMsg.key)
  return key_;
}
inline void GameMsg::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.key)
}

// float angle = 5;
inline void GameMsg::clear_angle() {
  angle_ = 0;
}
inline float GameMsg::angle() const {
  // @@protoc_insertion_point(field_get:GameMsg.angle)
  return angle_;
}
inline void GameMsg::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.angle)
}

// float atk = 6;
inline void GameMsg::clear_atk() {
  atk_ = 0;
}
inline float GameMsg::atk() const {
  // @@protoc_insertion_point(field_get:GameMsg.atk)
  return atk_;
}
inline void GameMsg::set_atk(float value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.atk)
}

// int32 enemyTag = 7;
inline void GameMsg::clear_enemytag() {
  enemytag_ = 0;
}
inline ::google::protobuf::int32 GameMsg::enemytag() const {
  // @@protoc_insertion_point(field_get:GameMsg.enemyTag)
  return enemytag_;
}
inline void GameMsg::set_enemytag(::google::protobuf::int32 value) {
  
  enemytag_ = value;
  // @@protoc_insertion_point(field_set:GameMsg.enemyTag)
}

// string chatMsg = 8;
inline void GameMsg::clear_chatmsg() {
  chatmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameMsg::chatmsg() const {
  // @@protoc_insertion_point(field_get:GameMsg.chatMsg)
  return chatmsg_.GetNoArena();
}
inline void GameMsg::set_chatmsg(const ::std::string& value) {
  
  chatmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMsg.chatMsg)
}
#if LANG_CXX11
inline void GameMsg::set_chatmsg(::std::string&& value) {
  
  chatmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMsg.chatMsg)
}
#endif
inline void GameMsg::set_chatmsg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  chatmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMsg.chatMsg)
}
inline void GameMsg::set_chatmsg(const char* value, size_t size) {
  
  chatmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMsg.chatMsg)
}
inline ::std::string* GameMsg::mutable_chatmsg() {
  
  // @@protoc_insertion_point(field_mutable:GameMsg.chatMsg)
  return chatmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameMsg::release_chatmsg() {
  // @@protoc_insertion_point(field_release:GameMsg.chatMsg)
  
  return chatmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameMsg::set_allocated_chatmsg(::std::string* chatmsg) {
  if (chatmsg != nullptr) {
    
  } else {
    
  }
  chatmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatmsg);
  // @@protoc_insertion_point(field_set_allocated:GameMsg.chatMsg)
}

// repeated int32 keys = 9;
inline int GameMsg::keys_size() const {
  return keys_.size();
}
inline void GameMsg::clear_keys() {
  keys_.Clear();
}
inline ::google::protobuf::int32 GameMsg::keys(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.keys)
  return keys_.Get(index);
}
inline void GameMsg::set_keys(int index, ::google::protobuf::int32 value) {
  keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMsg.keys)
}
inline void GameMsg::add_keys(::google::protobuf::int32 value) {
  keys_.Add(value);
  // @@protoc_insertion_point(field_add:GameMsg.keys)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameMsg::keys() const {
  // @@protoc_insertion_point(field_list:GameMsg.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameMsg::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.keys)
  return &keys_;
}

// repeated float damage = 10;
inline int GameMsg::damage_size() const {
  return damage_.size();
}
inline void GameMsg::clear_damage() {
  damage_.Clear();
}
inline float GameMsg::damage(int index) const {
  // @@protoc_insertion_point(field_get:GameMsg.damage)
  return damage_.Get(index);
}
inline void GameMsg::set_damage(int index, float value) {
  damage_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameMsg.damage)
}
inline void GameMsg::add_damage(float value) {
  damage_.Add(value);
  // @@protoc_insertion_point(field_add:GameMsg.damage)
}
inline const ::google::protobuf::RepeatedField< float >&
GameMsg::damage() const {
  // @@protoc_insertion_point(field_list:GameMsg.damage)
  return damage_;
}
inline ::google::protobuf::RepeatedField< float >*
GameMsg::mutable_damage() {
  // @@protoc_insertion_point(field_mutable_list:GameMsg.damage)
  return &damage_;
}

// -------------------------------------------------------------------

// RoomMsg

// .RoomMsgType MsgType = 1;
inline void RoomMsg::clear_msgtype() {
  msgtype_ = 0;
}
inline ::RoomMsgType RoomMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:RoomMsg.MsgType)
  return static_cast< ::RoomMsgType >(msgtype_);
}
inline void RoomMsg::set_msgtype(::RoomMsgType value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:RoomMsg.MsgType)
}

// int32 roomId = 2;
inline void RoomMsg::clear_roomid() {
  roomid_ = 0;
}
inline ::google::protobuf::int32 RoomMsg::roomid() const {
  // @@protoc_insertion_point(field_get:RoomMsg.roomId)
  return roomid_;
}
inline void RoomMsg::set_roomid(::google::protobuf::int32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:RoomMsg.roomId)
}

// bool result = 3;
inline void RoomMsg::clear_result() {
  result_ = false;
}
inline bool RoomMsg::result() const {
  // @@protoc_insertion_point(field_get:RoomMsg.result)
  return result_;
}
inline void RoomMsg::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:RoomMsg.result)
}

// repeated int32 roomList = 4;
inline int RoomMsg::roomlist_size() const {
  return roomlist_.size();
}
inline void RoomMsg::clear_roomlist() {
  roomlist_.Clear();
}
inline ::google::protobuf::int32 RoomMsg::roomlist(int index) const {
  // @@protoc_insertion_point(field_get:RoomMsg.roomList)
  return roomlist_.Get(index);
}
inline void RoomMsg::set_roomlist(int index, ::google::protobuf::int32 value) {
  roomlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:RoomMsg.roomList)
}
inline void RoomMsg::add_roomlist(::google::protobuf::int32 value) {
  roomlist_.Add(value);
  // @@protoc_insertion_point(field_add:RoomMsg.roomList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoomMsg::roomlist() const {
  // @@protoc_insertion_point(field_list:RoomMsg.roomList)
  return roomlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoomMsg::mutable_roomlist() {
  // @@protoc_insertion_point(field_mutable_list:RoomMsg.roomList)
  return &roomlist_;
}

// repeated bool roomStatuses = 5;
inline int RoomMsg::roomstatuses_size() const {
  return roomstatuses_.size();
}
inline void RoomMsg::clear_roomstatuses() {
  roomstatuses_.Clear();
}
inline bool RoomMsg::roomstatuses(int index) const {
  // @@protoc_insertion_point(field_get:RoomMsg.roomStatuses)
  return roomstatuses_.Get(index);
}
inline void RoomMsg::set_roomstatuses(int index, bool value) {
  roomstatuses_.Set(index, value);
  // @@protoc_insertion_point(field_set:RoomMsg.roomStatuses)
}
inline void RoomMsg::add_roomstatuses(bool value) {
  roomstatuses_.Add(value);
  // @@protoc_insertion_point(field_add:RoomMsg.roomStatuses)
}
inline const ::google::protobuf::RepeatedField< bool >&
RoomMsg::roomstatuses() const {
  // @@protoc_insertion_point(field_list:RoomMsg.roomStatuses)
  return roomstatuses_;
}
inline ::google::protobuf::RepeatedField< bool >*
RoomMsg::mutable_roomstatuses() {
  // @@protoc_insertion_point(field_mutable_list:RoomMsg.roomStatuses)
  return &roomstatuses_;
}

// repeated int32 roomNumOfPeople = 6;
inline int RoomMsg::roomnumofpeople_size() const {
  return roomnumofpeople_.size();
}
inline void RoomMsg::clear_roomnumofpeople() {
  roomnumofpeople_.Clear();
}
inline ::google::protobuf::int32 RoomMsg::roomnumofpeople(int index) const {
  // @@protoc_insertion_point(field_get:RoomMsg.roomNumOfPeople)
  return roomnumofpeople_.Get(index);
}
inline void RoomMsg::set_roomnumofpeople(int index, ::google::protobuf::int32 value) {
  roomnumofpeople_.Set(index, value);
  // @@protoc_insertion_point(field_set:RoomMsg.roomNumOfPeople)
}
inline void RoomMsg::add_roomnumofpeople(::google::protobuf::int32 value) {
  roomnumofpeople_.Add(value);
  // @@protoc_insertion_point(field_add:RoomMsg.roomNumOfPeople)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoomMsg::roomnumofpeople() const {
  // @@protoc_insertion_point(field_list:RoomMsg.roomNumOfPeople)
  return roomnumofpeople_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoomMsg::mutable_roomnumofpeople() {
  // @@protoc_insertion_point(field_mutable_list:RoomMsg.roomNumOfPeople)
  return &roomnumofpeople_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SessionMsgType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SessionMsgType>() {
  return ::SessionMsgType_descriptor();
}
template <> struct is_proto_enum< ::GameMsgType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMsgType>() {
  return ::GameMsgType_descriptor();
}
template <> struct is_proto_enum< ::RoomMsgType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RoomMsgType>() {
  return ::RoomMsgType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_message_2eproto
